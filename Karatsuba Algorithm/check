# -*- coding: utf-8 -*-
"""
Created on Fri Feb  1 02:34:20 2019

@author: Yuvraj
"""

# These Function are just for Testing purposes
# These Functions aren't necessery for Karatsuba progam

from random import getrandbits, randrange
import time

# n: quantity of numbers that you want
# base: base of those numbers
# max_no_of_digits: max number of digits you want in your number
def generateListWithBase(n,max_no_of_digits,base):
    if(n < 1 or max_no_of_digits < 1 or base < 1):
        return []
    l = []
    for i in range(n):   
        l.append(generateRandomNumWithBase(max_no_of_digits,base))
    return l

def generateRandomNumWithBase(max_no_of_digits,base):
    if(max_no_of_digits < 1 or base < 1):
        return 0
    no_of_digits = randrange(0,max_no_of_digits)
    num = 0
    for j in range(0,no_of_digits):         # it's like: if the number is 7849208 in base 10 then is evaluates as:
        jth_digit = randrange(0,base)   # 8*10^0 + 0*10^1 + 2*10^2 + 9*10^3 + 4*10^4 + 8*10^5 + 7*10^6
        num += jth_digit * base**j

# test: no of test cases
def check(test,base):
    ret = []
    check_pass = 0
    i = 0
    bits =1024
    while(i<test):
        a = getrandbits(bits)
        b = getrandbits(bits)
        if(noOfDigits(a,base) != noOfDigits(b,base)):
            continue
        ans = karatsubaMultiplication(a,b,10)
        #print("Itter:",i)#,"a:",a," b:",b," ans:",ans)
        if(a*b == ans):
            check_pass  += 1
        else:
            ret.append((a,b))
        i += 1
    print("pass:",check_pass ,"out of:",test)
    print("Accuracy:",(check_pass /test)*100)
    return ret

# This function is to compare the time execution b/w 2 functions
# Here I use it to check this time execution b/w my program and another called karatsubaV4()
# karatsubaV4 isn't in this code you can make your own code and test it w/ mine
def compare(test,base):
    myTime, kTime = 0,0
    i = 0
    bits =4098
    my_pass,k_pass = 0,0
    my_fail = []
    k_fail =[]
    while(i<test):
        print("Itter:",i)#,"a:",a," b:",b," ans:",ans)
        a = getrandbits(bits)
        b = getrandbits(bits)
        if(noOfDigits(a,base) != noOfDigits(b,base)):
            continue
        for j in range(2):
            timeStart = time.time()
            if(j==0):
                #print("karatsubaMultiplication('S',a,b,10)")
                ans = karatsubaMultiplication(a,b,10)
            else:
                #print("ans = karatsuba(a,b)")
                ans = karatsubaV4(a,b)
            #print(a,b,ans)
            if(a*b == ans):
                if(j==0): 
                    print("my_pass")#: a:",a," b:",b)
                    my_pass += 1
                else:
                    print("k_pass")#: a:",a," b:",b)
                    k_pass += 1
            else:
                if(j==0): 
                    my_fail.append((a,b))
                    print("my Fai.")#: a:",a," b:",b)
                else:
                    k_fail.append((a,b))
                    print("k Fail")#: a:",a," b:",b)
            timeStop = time.time()
            if(j==0):
                myTime += timeStop - timeStart
            else:
                kTime += timeStop - timeStart
        if(i!=0):
            print("My Current Accurecy:",(my_pass/i)*100)
            print("K Current Accurecy:",(k_pass/i)*100)
        i += 1
#    print("pass:",check_pass ,"out of:",test)
    print("My Accuracy:",(my_pass /test)*100)
    print("K Accuracy:",(k_pass /test)*100)
    return myTime, kTime, my_fail, k_fail        
